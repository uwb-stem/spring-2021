{
    "csse": [
        {
            "time": "12:30 PM - 12:45 PM",
            "projectId": "room-1-1230",
            "title": "Topographic Map",
            "studentName": "Mingzhen Wang",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/wangmingzhen.jpg",
            "abstract": "Regular topographic maps are obscure to most people. The purpose of our capstone project was to create a more intuitive 3D topographic map on PC and VR platforms for everyone. This project was developed in C# by using Unity and using Augmented Space Library (ASL) to implement the multi-user collaboration. \n\nOur project can generate two 3D terrain maps of different sizes based on a 2D height map image. We are a four-person team where my responsibilities are supporting user navigation in the generated map. I have built the following subsystems. Users can walk freely on the map to view the terrain details and teleport between two maps. Users can also place a map beacon, delete their or other user’s map beacon. They can also draw the route on the map and automatically move along it. Users can choose to move alone on their own or other users’ routes. To help users check the topographic map more conveniently, I have added compass, altitude, and speed information into our project. In order to provide users with a real experience, users can change the sunlight for all the users in the room and users can place objects such as houses and trees on the map.\n\nThis capstone project improved my game development skills, and I gained an in-depth understanding of ASL. I hope our project can help teams, firefighters, and others to comprehend the topographic maps more conveniently and reach their destination quickly.\n\nI want to share the huge gratitude with Jacob Chesnut, Scott Shirley, Nick Soerens in my team, and many thanks to them for the tremendous help so that I can put together this project at the end."
        },
        {
            "time": "12:45 PM - 1:00 PM",
            "projectId": "room-1-1245",
            "title": "Project Inkbrush: 2D Platformer Game in the Art Style of Traditional East Asian Paintings",
            "studentName": "Sean Miles",
            "studentMajor": "CSSE",
            "projectType": "Individual Project - Student Defined",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/milessean.png",
            "abstract": "Project Inkbrush is an individual game development project developed by Sean Miles in the Unity game engine in partnership with Patrick Siew, an applied design student at Lake Washington Institute of Technology. My role in the project was general development of the game, including, but not limited to, programming, gameplay design, level design, and UI design, with the artwork for the game being Patrick’s responsibility. With this project, I experienced the challenges of game development, similar to that of a workplace environment within my desired field, especially when within a constrained time frame and the pressure to meet deadlines.\n\nMy goal with the project was to learn about the process of game development in a manner closely resembling that of an actual workplace environment, while developing a passion project of mine into a “quality prototype” for the capstone, with hopeful future potential as a commercial product as a full game. However, with my goals would also come challenges. Patrick and I had worked together before on other various projects and game jams, however, not on a project of this scale with a constrained amount of time. Furthermore, with this project, I was taking responsibility for multiple fields of game development, most of which I had little to no experience with, besides programming.\n\nTo overcome these challenges, I applied my programming skills acquired from previous classes and narrowed the scope of the game down to functionality, with time for polish afterwards, and set milestones and requirements to be accomplished by specific dates. Moreover, in finishing the game, Patrick and I stayed in close communication to ensure that we were meeting milestones and on schedule. This reinforced the importance of communication when developing any projects, as well as the significance of setting milestones with deadlines, similar to sprints in a workplace environment. After the conclusion of the quarter, we accomplished enough progress to create a standalone game - a “quality prototype” of our original idea, as planned.\n\nAs a result of this project, I was able to gain a new understanding of the cycle of game development, the importance of playtesting, the significance of communication when it comes to collaboration, and the intricacies of the various roles and subfields within game development. In addition, I gained first-hand experience putting the game development cycle of prototyping, playtesting, iterating and refining, and repeating, into action. In future projects, this experience will prove vastly beneficial in developing games in collaborative and workplace environments in my desired field of game development."
        },
        {
            "time": "1:00 PM - 1:15 PM",
            "projectId": "room-1-100",
            "title": "Philips Co-op - Software Test Automation Engineering",
            "studentName": "Jayden Fullerton",
            "studentMajor": "CSSE / Math Minor",
            "projectType": "Sponsored Internship - Philips",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/fullertonjayden.jpg",
            "abstract": "While testing software is important everywhere, it is particularly important in the healthcare industry. When products directly impact people’s lives in this way, it is extremely important that the software is safe, accurate, and robust. Philips executes dozens of automated tests daily to ensure software requirements are met.\n\nThe concern faced is that consuming the results of these automated tests is not of convenience to testers or developers. Identifying key information about a test, such as the results of a test or what specific case caused it to fail, requires analyzing verbose logs to attempt to find the cause of the issue.\n\nThe purpose of this project is to create a dashboard that displays test information, such that anyone can visit the dashboard page and easily view the results of various tests that have been run recently. The dashboard can also display metrics about the tests that have been run, such as how many of them passed, or what platform they were run on. This will allow various users, from managers to testers to developers, to digest the results of automated testing more easily.\n\nThe dashboard is built on a MEAN development stack, utilizing MongoDB, Express, Angular, and Node.js to build a web interface on which the dashboard can be accessed. While this stack is the foundation of the project, there are also many other JavaScript libraries utilized to allow for filtering and searching data, webpage templating, and live updates.\n\nThe dashboard will soon be deployed for testing internally, where daily automated tests will be shown on the dashboard for the first time."
        },
        {
            "time": "1:15 PM - 1:30 PM",
            "projectId": "room-1-115",
            "title": "Exploring Cross Platform Networking Through Games",
            "studentName": "Hamza Siddiqui",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/siddiquihamza.png",
            "abstract": "Advancements in technologies have made it easier and quicker for small teams to develop cross platform multi user interactive applications. With this project we explored the issues and challenges that arise when developing such an application by creating vertical slices of a game that would implement networking elements. This was a group project that involved a networking team consisting of Bill Pham and Hamza Siddiqui and a gameplay team consisting of Ryan Le and Max Trinh. We all undertook this project in order to gain knowledge about certain topics and its relation to game development. For the networking team this was networking and for the gameplay team this was creative writing and project management.\n\nAs part of the networking team, our goals were to understand how to implement multiplayer into the game and how to support cross platform compatibility between Windows PC and Android. The main challenge came from the fact that we had no previous experience with networking let alone game networking.\n\nTo solve this problem we conducted research into different game network architectures including: peer-to-peer, client-server, and their variants. We also explored the different connectivity types such as port forwarding and relay servers to cloud based solutions and services like Azure Playfab and Amazon GameLift. In the end we chose a listen server architecture with relay server connection implementation as it was the quickest for us and suited our needs. With this solution we implemented a server authoritative model where clients send commands to the server to verify and execute actions which then get reflected to other clients. Two popular games: Mordhau and Valheim are also based on this general solution and were inspirations for our system. Using this model as well as synchronization tools such as remote procedure calls and synchronized variables we developed workflows for incorporating networking into gameplay logic.\n\nAs a result of this project we have gained a good understanding of how to approach game networking in regards to architecture, connectivity methods, and workflows. Creating a multiplayer game proved to be very accessible for a small team such as ours but the networking aspect meant that there was another layer of complexity that had to be considered when designing our systems. This was evident early on when multiple systems had to be redesigned to support multi user interaction. In our future endeavors this experience should prove useful for developing cross platform multi user applications."
        },
        {
            "time": "1:30 PM - 1:45 PM",
            "projectId": "room-1-130",
            "title": "Exploring Cross Platform Networking Through Games",
            "studentName": "Bill Pham",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/phambill.png",
            "abstract": "Advancements in technologies have made it easier and quicker for small teams to develop cross platform multi user interactive applications. With this project we explored the issues and challenges that arise when developing such an application by creating vertical slices of a game that would implement networking elements. This was a group project that involved a networking team consisting of Bill Pham and Hamza Siddiqui and a gameplay team consisting of Ryan Le and Max Trinh. We all undertook this project in order to gain knowledge about certain topics and its relation to game development. For the networking team this was networking and for the gameplay team this was creative writing and project management.\n\nAs part of the networking team, our goals were to understand how to implement multiplayer into the game and how to support cross platform compatibility between Windows PC and Android. The main challenge came from the fact that we had no previous experience with networking let alone game networking.\n\nTo solve this problem we conducted research into different game network architectures including: peer-to-peer, client-server, and their variants. We also explored the different connectivity types such as port forwarding and relay servers to cloud based solutions and services like Azure Playfab and Amazon GameLift. In the end we chose a listen server architecture with relay server connection implementation as it was the quickest for us and suited our needs. With this solution we implemented a server authoritative model where clients send commands to the server to verify and execute actions which then get reflected to other clients. Two popular games: Mordhau and Valheim are also based on this general solution and were inspirations for our system. Using this model as well as synchronization tools such as remote procedure calls and synchronized variables we developed workflows for incorporating networking into gameplay logic.\n\nAs a result of this project we have gained a good understanding of how to approach game networking in regards to architecture, connectivity methods, and workflows. Creating a multiplayer game proved to be very accessible for a small team such as ours but the networking aspect meant that there was another layer of complexity that had to be considered when designing our systems. This was evident early on when multiple systems had to be redesigned to support multi user interaction. In our future endeavors this experience should prove useful for developing cross platform multi user applications."
        },
        {
            "time": "1:45 PM - 2:00 PM",
            "projectId": "room-1-145",
            "title": "Puzzle Speed Run",
            "studentName": "Kenneth Ven",
            "studentMajor": "CSSE / Statistics Minor",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/cheukhang.png",
            "abstract": "In this project, we collaborated with the Cross Reality Collaboration Sandbox Research Group (CRCS) to test the completeness and the capability of their library, Augment Space Library (ASL). Augmented Space Library is a software library used in building remote collaborative applications that allow participants to work together in different realities. The realities available to ASL are Virtual Reality, Augmented Reality, and Personal Computer.\n\nWe started off the quarter by brainstorming and building a cross-reality collaboration application idea, which led to a game called “Puzzle Speed Run.” The game’s main goal is to test the players’ collaboration and puzzle-solving skills by timing how fast their team can decipher various puzzles. We built many features for the game, such as the lobby, control panel, and various puzzle mechanics. \n\nThe lobby is where players can select their team and choose which level they want to play. The lobby will instantiate the selected level once the host player clicks the start button.\n\nThe Control panel is a user interface that allows the player to select its mouse sensitivity, check the game’s controls, check on the timer, exit the control panel, and quit the game.\n\nPuzzle mechanics such as button sequence, ball on a track, and color pattern were brainstormed and built during the project. Each of the mechanics were designed differently to better test how well the players can collaborate with their teammates.\n\nThroughout this quarter, we had four playtests. The playtests helped us realize the manipulation issue with our mechanics and modify the manipulation into what was preferred for the game. We used the feedback from the demos and playtests to decide what to incorporate into the final version. We also tested if the level’s difficulty reached our expectations. Finally, the playtests helped us to test the completeness of our game with ASL. \n\nBy building those features, we allowed the players to collaborate to solve puzzles together while having Virtual Reality and Personal Computer in the same environment. Thus, this project shows that ASL has the capability to allow cross-reality collaboration.\n\nIn conclusion, we learned a lot from this project. We learned to remote collaborate with others, develop multiplayer games, manage the project, and use Github. However, there were also times when we struggled. For example, we struggled with adapting to the behavior of ASL, managing time on a few tasks, and fixing bugs."
        },
        {
            "time": "2:00 PM - 2:15 PM",
            "projectId": "room-1-200",
            "title": "Puzzle Speed Run",
            "studentName": "Cheuk Hang",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/venkenneth.jpg",
            "abstract": "In this project, we collaborated with the Cross Reality Collaboration Sandbox Research Group (CRCS) to test the completeness and the capability of their library, Augment Space Library (ASL). Augmented Space Library is a software library used in building remote collaborative applications that allow participants to work together in different realities. The realities available to ASL are Virtual Reality, Augmented Reality, and Personal Computer.\n\nWe started off the quarter by brainstorming and building a cross-reality collaboration application idea, which led to a game called “Puzzle Speed Run.” The game’s main goal is to test the players’ collaboration and puzzle-solving skills by timing how fast their team can decipher various puzzles. We built many features for the game, such as the lobby, control panel, and various puzzle mechanics. \n\nThe lobby is where players can select their team and choose which level they want to play. The lobby will instantiate the selected level once the host player clicks the start button.\n\nThe Control panel is a user interface that allows the player to select its mouse sensitivity, check the game’s controls, check on the timer, exit the control panel, and quit the game.\n\nPuzzle mechanics such as button sequence, ball on a track, and color pattern were brainstormed and built during the project. Each of the mechanics were designed differently to better test how well the players can collaborate with their teammates.\n\nThroughout this quarter, we had four playtests. The playtests helped us realize the manipulation issue with our mechanics and modify the manipulation into what was preferred for the game. We used the feedback from the demos and playtests to decide what to incorporate into the final version. We also tested if the level’s difficulty reached our expectations. Finally, the playtests helped us to test the completeness of our game with ASL. \n\nBy building those features, we allowed the players to collaborate to solve puzzles together while having Virtual Reality and Personal Computer in the same environment. Thus, this project shows that ASL has the capability to allow cross-reality collaboration.\n\nIn conclusion, we learned a lot from this project. We learned to remote collaborate with others, develop multiplayer games, manage the project, and use Github. However, there were also times when we struggled. For example, we struggled with adapting to the behavior of ASL, managing time on a few tasks, and fixing bugs."
        },
        {
            "time": "2:15 PM - 2:30 PM",
            "projectId": "room-1-215",
            "title": "Enhance Immersion in Virtual Reality Environment",
            "studentName": "Ngang Ngo",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/ngonathan.png",
            "abstract": "The purpose of this capstone project is to explore the possibilities of virtual reality collaboration in an immersive environment. This project was developed in C# using Unity, a real-time game development environment, and leverages the ASL (Augmented Space Library) framework to implement its collaborative multiplayer synchronization. \n\nThe project we made, called No Air Hockey, is a competitive multiplayer team-based game where players fly around in a zero-gravity environment, attempting to direct a ball into their opponents’ goal to score a point. Traditional games are grounded and typically do not fully take advantage of all three dimensions, while No Air Hockey breaks this boundary, allowing players to maneuver around in a 3D environment. Players can fly using rocket boosters attached to their hands and can interact with the ball by hitting it with their paddle, sending it in whatever direction the paddle was facing. No Air Hockey takes advantage of the immersion presented by VR to give players an entirely new experience of flying in zero gravity. With this new perspective, players are encouraged to collaborate with their teammates to plan attacks and defenses.\n\nAfter completing this project, we are very happy with the result. We believe that No Air Hockey successfully accomplished all of the goals we set out to complete with high immersion, encouraged collaboration, well designed network synchronization, and support for multiple VR devices.\n\n As a result of this project, we have learned multiple critical lessons about game development, network design, team collaboration, the importance of testing, and the usefulness of design documents. If we were to do a project similar to this in the future, we would: create a design document early and maintain it throughout the development process; refactor code weekly in order to save time when finding bugs later on; test more often to avoid bugs piling up; and communicate more, especially surrounding new changes to code."
        },
        {
            "time": "2:30 PM - 2:45 PM",
            "projectId": "room-1-230",
            "title": "Collaborative Cross Platform Game Development",
            "studentName": "Nicholas Chambers",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/chambersnicholasisaac.png",
            "abstract": "The purpose of this capstone project is to explore the possibilities of virtual reality collaboration in an immersive environment. This project was developed in C# using Unity, a real-time game development environment, and leverages the ASL (Augmented Space Library) framework to implement its collaborative multiplayer synchronization. \n\nThe project we made, called No Air Hockey, is a competitive multiplayer team-based game where players fly around in a zero-gravity environment, attempting to direct a ball into their opponents’ goal to score a point. Traditional games are grounded and typically do not fully take advantage of all three dimensions, while No Air Hockey breaks this boundary, allowing players to maneuver around in a 3D environment. Players can fly using rocket boosters attached to their hands and can interact with the ball by hitting it with their paddle, sending it in whatever direction the paddle was facing. No Air Hockey takes advantage of the immersion presented by VR to give players an entirely new experience of flying in zero gravity. With this new perspective, players are encouraged to collaborate with their teammates to plan attacks and defenses.\n\nAfter completing this project, we are very happy with the result. We believe that No Air Hockey successfully accomplished all of the goals we set out to complete with high immersion, encouraged collaboration, well designed network synchronization, and support for multiple VR devices.\n\n As a result of this project, we have learned multiple critical lessons about game development, network design, team collaboration, the importance of testing, and the usefulness of design documents. If we were to do a project similar to this in the future, we would: create a design document early and maintain it throughout the development process; refactor code weekly in order to save time when finding bugs later on; test more often to avoid bugs piling up; and communicate more, especially surrounding new changes to code."
        },
        {
            "time": "2:45 PM - 3:00 PM",
            "projectId": "room-1-245",
            "title": "Collaborative VR Game Development",
            "studentName": "Sammy Lew",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/lewsammy.jpg",
            "abstract": "The purpose of this capstone project is to explore the possibilities of virtual reality collaboration in an immersive environment. This project was developed in C# using Unity, a real-time game development environment, and leverages the ASL (Augmented Space Library) framework to implement its collaborative multiplayer synchronization. \n\nThe project we made, called No Air Hockey, is a competitive multiplayer team-based game where players fly around in a zero-gravity environment, attempting to direct a ball into their opponents’ goal to score a point. Traditional games are grounded and typically do not fully take advantage of all three dimensions, while No Air Hockey breaks this boundary, allowing players to maneuver around in a 3D environment. Players can fly using rocket boosters attached to their hands and can interact with the ball by hitting it with their paddle, sending it in whatever direction the paddle was facing. No Air Hockey takes advantage of the immersion presented by VR to give players an entirely new experience of flying in zero gravity. With this new perspective, players are encouraged to collaborate with their teammates to plan attacks and defenses.\n\nAfter completing this project, we are very happy with the result. We believe that No Air Hockey successfully accomplished all of the goals we set out to complete with high immersion, encouraged collaboration, well designed network synchronization, and support for multiple VR devices.\n\n As a result of this project, we have learned multiple critical lessons about game development, network design, team collaboration, the importance of testing, and the usefulness of design documents. If we were to do a project similar to this in the future, we would: create a design document early and maintain it throughout the development process; refactor code weekly in order to save time when finding bugs later on; test more often to avoid bugs piling up; and communicate more, especially surrounding new changes to code."
        },
        {
            "time": "3:00 PM - 3:15 PM",
            "projectId": "room-1-300",
            "title": "Bringing Fantastic Meetings into 3D",
            "studentName": "Kevin Blair",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/blairkevin.jpg",
            "abstract": "The goal of this group project capstone was to develop a Networked Cross-Reality Application utilizing the Cross-Reality Collaboration Sandbox Research Group’s Augmented Space Library. This is to allow users to collaborate inside of the same environment and see the changes that other users are making.\n\nWe developed a Tele-Meeting Software System, a PC and Virtual-Reality application to facilitate collaboration in unique and user-created 3D Environments. It included Whiteboards and Projectors, Voice Communication, Firebox Room Scene Generation, and an online repository of Firebox Room Scenes.\n\nOver the course of 1200 cumulative hours of development we created many iterations of our software and released 4 playtests for user feedback. Many aspects of core features underwent complete overhauls as we gained greater insight and experience.\n\nMy contributions throughout the quarter were on the whiteboard, implementing VR and its UI. I implemented multiple interactions on the whiteboard and its functionality. I enabled a PC and a VR player to be connected to the same scene at the same time.\n\nCreating a simple but effective object used to make the user feel like they were naturally using a whiteboard was an important feature for the project. Getting both PC and VR players in the same scene turned out to be a difficult but fun challenge. Creating a dynamic 3D VR screen-sharing interaction provided an interesting system for users.\n\nI have learned throughout this project how important staying on track with what is needed versus what is wanted. Allowing feature-creep is all too easy, and combating it is difficult. Figuring out that line between the needs and wants is not just important, but vital for getting projects out on time that are functional and delivering what you promised."
        },
        {
            "time": "3:15 PM - 3:30 PM",
            "projectId": "room-1-315",
            "title": "Bringing Fantastic Meetings into 3D",
            "studentName": "Joshua Max",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/maxjosh.jpg",
            "abstract": "The goal of this group project capstone was to develop a Networked Cross-Reality Application utilizing the Cross-Reality Collaboration Sandbox Research Group’s Augmented Space Library. This is to allow users to collaborate inside of the same environment and see the changes that other users are making.\n\nWe developed a Tele-Meeting Software System, a PC and Virtual-Reality application to facilitate collaboration in unique and user-created 3D Environments. It included Whiteboards and Projectors, Voice Communication, Firebox Room Scene Generation, and an online repository of Firebox Room Scenes.\n\nOver the course of 1200 cumulative hours of development we created many iterations of our software and released 4 playtests for user feedback. Many aspects of core features underwent complete overhauls as we gained greater insight and experience.\n\nMy contributions throughout the quarter were on the whiteboard, implementing VR and its UI. I implemented multiple interactions on the whiteboard and its functionality. I enabled a PC and a VR player to be connected to the same scene at the same time.\n\nCreating a simple but effective object used to make the user feel like they were naturally using a whiteboard was an important feature for the project. Getting both PC and VR players in the same scene turned out to be a difficult but fun challenge. Creating a dynamic 3D VR screen-sharing interaction provided an interesting system for users.\n\nI have learned throughout this project how important staying on track with what is needed versus what is wanted. Allowing feature-creep is all too easy, and combating it is difficult. Figuring out that line between the needs and wants is not just important, but vital for getting projects out on time that are functional and delivering what you promised."
        },
        {
            "time": "3:30 PM - 3:45 PM",
            "projectId": "room-1-330",
            "title": "Bringing Fantastic Meetings into 3D",
            "studentName": "Connor Browne",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "posters/csse/browneconnorbenjamin.jpg",
            "abstract": "The goal of this group project capstone was to develop a Networked Cross-Reality Application utilizing the Cross-Reality Collaboration Sandbox Research Group’s Augmented Space Library. This is to allow users to collaborate inside of the same environment and see the changes that other users are making.\n\nWe developed a Tele-Meeting Software System, a PC and Virtual-Reality application to facilitate collaboration in unique and user-created 3D Environments. It included Whiteboards and Projectors, Voice Communication, Firebox Room Scene Generation, and an online repository of Firebox Room Scenes.\n\nOver the course of 1200 cumulative hours of development we created many iterations of our software and released 4 playtests for user feedback. Many aspects of core features underwent complete overhauls as we gained greater insight and experience.\n\nMy contributions throughout the quarter were on the whiteboard, implementing VR and its UI. I implemented multiple interactions on the whiteboard and its functionality. I enabled a PC and a VR player to be connected to the same scene at the same time.\n\nCreating a simple but effective object used to make the user feel like they were naturally using a whiteboard was an important feature for the project. Getting both PC and VR players in the same scene turned out to be a difficult but fun challenge. Creating a dynamic 3D VR screen-sharing interaction provided an interesting system for users.\n\nI have learned throughout this project how important staying on track with what is needed versus what is wanted. Allowing feature-creep is all too easy, and combating it is difficult. Figuring out that line between the needs and wants is not just important, but vital for getting projects out on time that are functional and delivering what you promised."
        }
    ]
}